version: "3.8"

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: erp-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: erp_quotation_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - erp-dev-network

  # Backend API for Development
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp-backend-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres.uywhfffsdgwxhiqluzxv:NOH5kdT2L2o8baKH@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres
      JWT_SECRET: 3d24379807562d988f83aac5ea320684
      JWT_EXPIRATION: 24h
      PORT: 3000
      FRONTEND_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - /app/node_modules
    networks:
      - erp-dev-network

  # pgAdmin for Development
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: erp-pgadmin-dev
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - erp-dev-network

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  erp-dev-network:
    driver: bridge
